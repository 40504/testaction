name: create a json file from "Add Icon" template when a new issue is opened with label "json"
on:
  issues:
    types:
      - labeled

jobs:
  create-json-from-issue:
    if: github.event.label.name == 'json'
    runs-on: ubuntu-latest
    env:
      BODY: ${{ toJson(github.event.issue.body) }}
    steps:
      - name: Check out scripts
        uses: actions/checkout@v3

      - name: node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: |
          node script.js
        env:
          BODY: ${{ env.BODY }}

      - name: Commit
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "github-actions"
          git pull
          git add . -A
          git commit --allow-empty -a -m "issue_id: #${{ github.event.issue.number }}"

      - name: Push
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

      - name: Add comment
        uses: peter-evans/create-or-update-comment@5f728c3dae25f329afbe34ee4d08eef25569d79f
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            #${{ github.event.issue.number }}

  comment:
    runs-on: ubuntu-latest
    outputs:
      variable-value: ${{ steps.get-value.outputs.variable-value }}
    steps:
      - uses: actions/github-script@v6
        with:
          script: |
            const variableValue = require('./script.js').json;
            console.log('Variable value:', variableValue);
            
            // Set output variable for later use
            if (variableValue !== undefined) {
              process.stdout.write("{variable-value}={variableValue}" >> $GITHUB_OUTPUT);
            }
            const script = require('./script.js').json
            console.log(script({github, context}))

      # - name: Add label
      #   uses: actions/github-script@v6
      #   with:
      #     script: |
      #       github.rest.issues.addLabels({
      #         issue_number: context.issue.number,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         labels: ['automate']
      #       })